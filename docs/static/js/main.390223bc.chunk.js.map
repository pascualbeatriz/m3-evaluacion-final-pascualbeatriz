{"version":3,"sources":["components/CharacterList/CharacterCard/index.js","components/CharacterList/index.js","components/Filter/index.js","components/Home/index.js","components/CharacterDetail/index.js","App.js","Services/Fetch.js","index.js"],"names":["CharacterCard","props","name","image","species","className","src","alt","CharacterList","characters","gap","gender","filter","myCharacter","toUpperCase","includes","item","map","characterList","key","id","to","Filter","getInputValue","type","onChange","value","Home","CharacterDetail","routerProps","getId","parseInt","match","params","characterDetail","detail","status","origin","episode","length","App","state","bind","this","getUrl","fetch","then","response","json","data","setState","results","event","currentTarget","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"2VAuBeA,EApBO,SAAAC,GAAU,IACvBC,EAAsBD,EAAtBC,KAAKC,EAAiBF,EAAjBE,MAAMC,EAAWH,EAAXG,QAClB,OACE,yBAAKC,UAAU,6BACb,wBAAIA,UAAU,wBAAwBH,GACtC,yBAAKG,UAAU,4BACb,yBAAKC,IAAKH,EAAOI,IAAG,oBAAeL,GAAQG,UAAU,oBAEvD,uBAAGA,UAAU,sBAAsBD,KC6B1BI,EAnCO,SAAAP,GAAU,IACvBQ,EAAyBR,EAAzBQ,WAAWC,EAAcT,EAAdS,IAAIC,EAAUV,EAAVU,OACtB,OACE,wBAAIN,UAAU,oBACbI,EACAG,QAAO,SAAAC,GAAW,OAAIA,EAAYX,KAAKY,cAAcC,SAASL,EAAII,kBAClEF,QAAO,SAAAI,GACJ,MAAe,QAAXL,GAGKA,IAAWK,EAAKL,UAG5BM,KAAI,SAAAC,GACH,OACE,wBAAIb,UAAU,kBAAkBc,IAAKD,EAAcE,IACjD,kBAAC,IAAD,CAAMC,GAAE,4BAAuBH,EAAcE,IAAMf,UAAU,wBAC7D,kBAAC,EAAD,CACAH,KAAQgB,EAAchB,KACtBC,MAASe,EAAcf,MACvBC,QAAWc,EAAcd,iBCRpBkB,EAdA,SAAArB,GAAU,IAChBsB,EAAsBtB,EAAtBsB,cAAeb,EAAOT,EAAPS,IACtB,OACE,yBAAKL,UAAU,yBACb,2BAAOmB,KAAK,OAAOnB,UAAU,cAAcoB,SAAUF,EAAeG,MAAOhB,MCsBlEiB,EAxBF,SAAA1B,GAAU,IACdsB,EAA0CtB,EAA1CsB,cAAeb,EAA2BT,EAA3BS,IAAKD,EAAsBR,EAAtBQ,WAAYE,EAAUV,EAAVU,OACvC,OACE,kBAAC,WAAD,KACA,kBAAC,EAAD,CACEY,cAAiBA,EACjBb,IAAOA,IAGT,kBAAC,EAAD,CACED,WAAcA,EACdC,IAAOA,EACPC,OAAUA,MCuBDiB,EApCS,SAAA3B,GAAU,IACzB4B,EAA2B5B,EAA3B4B,YAAapB,EAAcR,EAAdQ,WACdqB,EAAQC,SAASF,EAAYG,MAAMC,OAAOb,IAE1Cc,EAAkBzB,EAAWG,QAAO,SAAAuB,GAAM,OAAIA,EAAOf,KAAOU,KAElE,GAAGI,EAAgB,GAAK,CAAC,IAAD,EAC6BA,EAAgB,GAA5DhC,EADe,EACfA,KAAKkC,EADU,EACVA,OAAOhC,EADG,EACHA,QAAQiC,EADL,EACKA,OAAOC,EADZ,EACYA,QAAQnC,EADpB,EACoBA,MACxC,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMkB,GAAG,IAAIhB,UAAU,6BAAvB,YACE,wBAAIA,UAAU,eAAd,gBAAsCH,IACtC,uBAAGG,UAAU,iBAAb,kBAAyC+B,IACzC,uBAAG/B,UAAU,kBAAb,mBAA2CD,IAC3C,uBAAGC,UAAU,iBAAb,kBAAyCgC,EAAOnC,OAChD,uBAAGG,UAAU,kBAAb,oBAA4CiC,EAAQC,SACpD,yBAAKlC,UAAU,yBACb,yBAAKC,IAAKH,EAAOI,IAAG,oBAAeL,GAAQG,UAAU,iBAK/D,OACE,kBAAC,WAAD,KACE,uBAAGA,UAAU,qBAAb,+CACA,kBAAC,IAAD,CAAMgB,GAAG,IAAIhB,UAAU,6BAAvB,c,OC6COmC,G,kBAlEb,WAAYvC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDwC,MAAQ,CACXhC,WAAW,GACXC,IAAK,GACLC,OAAO,OAET,EAAKY,cAAgB,EAAKA,cAAcmB,KAAnB,gBARJ,E,iFAYnBC,KAAKC,W,+BAGE,IAAD,OClBJC,MALQ,8CAMPC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UDmB7BF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CACZzC,WAAWwC,EAAKE,e,oCAKRC,GACZ,IAAM1C,EAAM0C,EAAMC,cAAc3B,MAChCiB,KAAKO,SAAS,CACZxC,IAAKA,M,+BAIG,IAAD,SACyBiC,KAAKF,MAA9BhC,EADA,EACAA,WAAWC,EADX,EACWA,IAAIC,EADf,EACeA,OACtB,OACE,yBAAKN,UAAU,OACb,wBAAIA,UAAU,eAAd,2BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,IAAIC,OAAW,WAC/B,OACE,kBAAC,EAAD,CACEjC,cAAiB,EAAKA,cACtBb,IAAOA,EACPD,WAAcA,EACdE,OAAUA,OAKhB,kBAAC,IAAD,CAAO4C,KAAK,wBAAwBC,OAAW,SAAC3B,GAC9C,OACE,kBAAC,EAAD,CACEA,YAAeA,EACfpB,WAAcA,a,GArDdgD,IAAMC,YEAxBC,IAASH,OAAO,kBAAC,IAAD,KAAY,kBAAC,EAAD,OAAsBI,SAASC,eAAe,W","file":"static/js/main.390223bc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = props => {\n  const {name,image,species} = props;\n  return(\n    <div className=\"character__List-container\">\n      <h2 className=\"character__List-name\">{name}</h2>\n      <div className=\"character__img-container\">\n        <img src={image} alt={`imagen de ${name}`} className=\"character__img\"/>\n      </div>\n      <p className=\"character__species\">{species}</p>\n    </div>\n    );\n};\n\nCharacterCard.propTypes = {\n  name: PropTypes.string,\n  image: PropTypes.string,\n  species: PropTypes.string\n};\n\n\nexport default CharacterCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterCard from './CharacterCard';\nimport {Link} from 'react-router-dom';\n\nconst CharacterList = props => {\n  const {characters,gap,gender} = props;\n  return(\n    <ol className=\"characters__list\">\n    {characters\n    .filter(myCharacter => myCharacter.name.toUpperCase().includes(gap.toUpperCase()))\n    .filter(item => {\n        if (gender === 'all') {\n          return true;\n        } else {\n          return gender === item.gender;\n        }\n    })\n    .map(characterList => {\n      return(\n        <li className=\"character__List\" key={characterList.id}>\n          <Link to={`/character_detail/${characterList.id}`} className=\"character__List-link\">\n          <CharacterCard \n          name = {characterList.name}\n          image = {characterList.image}\n          species = {characterList.species}\n          />\n          </Link>\n\n        </li>\n      );\n    })}\n  </ol> \n  );\n};\n\nCharacterList.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CharacterList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = props => {\n  const {getInputValue, gap} = props;\n  return (\n    <div className=\"gap__search-container\">\n      <input type=\"text\" className=\"gap__search\" onChange={getInputValue} value={gap}/>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  getInputValue:PropTypes.func,\n  gap:PropTypes.string\n}\n\nexport default Filter;","import React, {Fragment} from 'react';\nimport CharacterList from '../CharacterList';\nimport Filter from '../Filter';\nimport PropTypes from 'prop-types';\n\nconst Home = props => {\n  const {getInputValue, gap ,characters, gender} = props;\n  return(\n    <Fragment>\n    <Filter \n      getInputValue = {getInputValue}\n      gap = {gap}\n      />\n\n    <CharacterList\n      characters = {characters}\n      gap = {gap}\n      gender = {gender}\n      />   \n    </Fragment>\n  );\n};\n\nHome.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getInputValue:PropTypes.func,\n  gap:PropTypes.string,\n}\n\nexport default Home;","import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterDetail = props => {\n  const {routerProps, characters} = props;\n  const getId = parseInt(routerProps.match.params.id);\n\n  const characterDetail = characters.filter(detail => detail.id === getId);\n\n  if(characterDetail[0  ]){\n    const {name,status,species,origin,episode,image} = characterDetail[0];\n      return(\n        <Fragment>\n          <Link to=\"/\" className=\"character__List-Home-link\"> Volver </Link>\n            <h3 className=\"detail-name\">{`Name: ${name}`}</h3>\n            <p className=\"detail-status\">{`Status: ${status}`}</p>\n            <p className=\"detail-species\">{`Species: ${species}`}</p>\n            <p className=\"detail-origen\">{`Origin: ${origin.name}`}</p>\n            <p className=\"detail-episode\">{`Episodes: ${episode.length}`}</p>\n            <div className=\"container__detail-img\">\n              <img src={image} alt={`Imagen de ${name}`} className=\"detail_img\"/> \n            </div>\n        </Fragment>\n      );\n  }else{\n    return(\n      <Fragment>\n        <p className=\"warning__messagge\">Ese personaje no existe, intentalo de nuevo</p>\n        <Link to=\"/\" className=\"character__List-Home-link\"> Volver </Link>\n      </Fragment>\n    );\n  }\n};\n\nCharacterDetail.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  routerProps: PropTypes.object\n};\n\nexport default CharacterDetail;","import React from 'react';\nimport {getUrlData} from './Services/Fetch';\nimport Home from './components/Home';\nimport CharacterDetail from './components/CharacterDetail';\nimport {Switch, Route} from 'react-router-dom';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      characters:[],\n      gap: '',\n      gender:'all'\n    }\n    this.getInputValue = this.getInputValue.bind(this);\n  }\n\ncomponentDidMount (){\n  this.getUrl();\n}\n\ngetUrl(){\n  getUrlData()\n  .then(data => {\n    this.setState({\n      characters:data.results\n    });\n  });\n}\n\ngetInputValue(event){\n  const gap = event.currentTarget.value;\n  this.setState({\n    gap: gap\n  });\n}\n\n  render() {\n    const {characters,gap,gender} = this.state;\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__tittle\">titulo, aqui va el logo</h1>\n          <Switch>\n            <Route exact path=\"/\" render = { () => {\n              return (\n                <Home \n                  getInputValue = {this.getInputValue}\n                  gap = {gap}\n                  characters = {characters}\n                  gender = {gender}\n                />   \n              );\n            }}\n            />\n            <Route path=\"/character_detail/:id\" render = { (routerProps) => {\n              return(\n                <CharacterDetail \n                  routerProps = {routerProps}\n                  characters = {characters}\n                />\n              );\n            }}\n            />\n          </Switch>\n          \n          \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const url = 'https://rickandmortyapi.com/api/character/';\n\n\nconst getUrlData = () => {\n  return (\n    fetch(url)\n    .then (response => response.json())\n  );\n};\n\n\nexport {getUrlData};\n\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}